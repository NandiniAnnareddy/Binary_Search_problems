01 . Binary Search :
class Solution:
    def search(self, nums: List[int], target: int) -> int:
        low  = 0
        high = len(nums)-1
        while(low <= high):
            mid = (low+high)//2
            if nums[mid] == target :
                return mid
            elif nums[mid] > target :
                high = mid -1
            else :
                low = mid + 1
        return -1

02 . Lower bound 
class Solution:
    def lowerBound(self, arr, target):
        ans = len(arr)
        low = 0
        high = len(arr)-1
        while(low <= high):
            mid = (low+high)//2
            if (arr[mid]>=target):
                ans = mid
                high = mid - 1
            else :
                low = mid + 1
        return ans

03 . Upper Bound
class Solution:
    def upperBound(self, arr, target):
        ans = len(arr)
        low = 0
        high = len(arr)-1
        while(low <= high):
            mid = (low+high)//2
            if (arr[mid]>target):
                ans = mid
                high = mid - 1
            else :
                low = mid + 1
        return ans
