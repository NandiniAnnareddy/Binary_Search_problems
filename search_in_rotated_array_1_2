33 . Search in rotated array 1 :
class Solution:
    def search(self, nums: List[int], target: int) -> int:
        low = 0
        high = len(nums) - 1
        while(low <= high):
            mid = (low+high)//2
            if (nums[mid] == target):
                return mid
            elif(nums[low] <= nums[mid]):
                if (nums[low] <= target <= nums[mid]):
                    high = mid - 1
                else :
                    low = mid + 1
            elif(nums[mid] <= nums[high]):
                if(nums[mid] <= target <= nums[high]):
                    low = mid + 1
                else :
                    high = mid - 1
        return -1 

34 . Search in rotated array 2 :
class Solution:
    def search(self, nums: List[int], target: int) -> bool:
        low = 0
        high = len(nums) - 1
        while(low <= high):
            mid = (low+high)//2
            if (nums[mid] == target):
                return True
            elif (nums[low]==nums[mid]==nums[high]):
                low = low+1
                high = high - 1
            elif(nums[low] <= nums[mid]):
                if (nums[low] <= target <= nums[mid]):
                    high = mid - 1
                else :
                    low = mid + 1
            elif(nums[mid] <= nums[high]):
                if(nums[mid] <= target <= nums[high]):
                    low = mid + 1
                else :
                    high = mid - 1
        return False
