153 . minimum im rotated sorted array :
class Solution:
    def findMin(self, nums: List[int]) -> int:
        low = 0
        high = len(nums)-1
        mini = float("inf")
        while(low <= high):
            mid = (low+high)//2
            if (nums[low] <=nums[mid]):
                mini = min(mini,nums[low])
                low = mid + 1
            elif (nums[mid] <= nums[high]):
                mini = min(mini,nums[mid])
                high = mid - 1
        return mini

GFG - find kth rotation in rotated sorted array
class Solution:
    def findKRotation(self, arr):
        low = 0
        high = len(arr)-1
        mini_index = 0
        while(low <= high):
            mid = (low+high)//2
            if (arr[low] <=arr[mid]):
                if arr[low] < arr[mini_index]:
                    mini_index = low
                low = mid + 1
            elif (arr[mid] <= arr[high]):
                if (arr[mid] < arr[mini_index]):
                    mini_index = mid
                high = mid - 1
        return mini_index
        
        
